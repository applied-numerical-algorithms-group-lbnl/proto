#!/usr/bin/python
from argparse import *
import os
import glob
import platform
import datetime

top = os.getcwd()
now = datetime.datetime.now()

default_directory= top + '/_bench.'+ str(now.month) + "." + str(now.day) + "." + str(now.year)
print "Proto benchmarking script.   This runs the examples.   Use the configure script to change dimensions or compilers."
parser = ArgumentParser()
parser.add_argument('--dir'   , help='Directory in which to put results', default=default_directory)
parser.add_argument('--phome' , help='Directory where proto_home lives' , default=top)
parser.add_argument('--min_nx', help='Minimum resolution to run'        , default=64)
parser.add_argument('--max_nx', help='Maximum resolution to run'        , default=256)
parser.add_argument('--max_stream', help='Max number of streams'        , default=16)
parser.add_argument('--min_stream', help='Min number of streams'        , default=1)
args = parser.parse_args()

resultsdir = args.dir
proto_home = args.phome
min_nx = args.min_nx
max_nx = args.max_nx
max_st = args.max_stream
min_st = args.min_stream

print "putting benchmark results in " + resultsdir
if not(os.path.isdir(resultsdir)):
  os.mkdir(resultsdir)

targets=['applyKernel', 'forallKernel']


for t in targets:
  exampleDir = proto_home + '/examples/' + t + '/exec'
  print exampleDir
  subdir = resultsdir + "/_" + t
  if not(os.path.isdir(subdir)):
    os.mkdir(subdir)

  st = min_st
  nx = min_nx

  while st <= max_st:
    while nx <= max_nx:
      finaldir = subdir + "/_nx" + str(nx) + "nstream_" + str(st)
      if not(os.path.isdir(finaldir)):
        os.mkdir(finaldir)

      os.chdir(finaldir)
      commname = exampleDir + "/" + t + ".exe -n " + str(nx) + " -s " + str(st) + " > screen.out"
      print commname
      os.system(commname);
      nx *= 2
      st *= 2
